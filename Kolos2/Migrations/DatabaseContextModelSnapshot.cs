// <auto-generated />
using System;
using Kolos2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kolos2.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kolos2.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            FirstName = "Anna",
                            HireDate = new DateTime(2025, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Kowalska"
                        },
                        new
                        {
                            EmployeeId = 2,
                            FirstName = "Jan",
                            HireDate = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Nowak"
                        });
                });

            modelBuilder.Entity("Kolos2.Models.Nursery", b =>
                {
                    b.Property<int>("NurseryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NurseryID"));

                    b.Property<DateTime>("EstablishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("NurseryID");

                    b.ToTable("Nurseries");

                    b.HasData(
                        new
                        {
                            NurseryID = 1,
                            EstablishedDate = new DateTime(2025, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Green Forest Nursery"
                        });
                });

            modelBuilder.Entity("Kolos2.Models.Responsible", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("BatchId")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EmployeeId", "BatchId");

                    b.HasIndex("BatchId");

                    b.ToTable("Responsibles");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            BatchId = 1,
                            Role = "Supervisor"
                        });
                });

            modelBuilder.Entity("Kolos2.Models.SeedllingBatch", b =>
                {
                    b.Property<int>("BatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BatchId"));

                    b.Property<int>("NurseryId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReadyDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SownDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.HasKey("BatchId");

                    b.HasIndex("NurseryId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("SeedllingBatches");

                    b.HasData(
                        new
                        {
                            BatchId = 1,
                            NurseryId = 1,
                            Quantity = 10,
                            ReadyDate = new DateTime(2026, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SownDate = new DateTime(2025, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SpeciesId = 1
                        });
                });

            modelBuilder.Entity("Kolos2.Models.TreeSpecies", b =>
                {
                    b.Property<int>("SpeciesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpeciesId"));

                    b.Property<int>("GrowthTimeInYears")
                        .HasColumnType("int");

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SpeciesId");

                    b.ToTable("Trees");

                    b.HasData(
                        new
                        {
                            SpeciesId = 1,
                            GrowthTimeInYears = 10,
                            LatinName = "Latin"
                        });
                });

            modelBuilder.Entity("Kolos2.Models.Responsible", b =>
                {
                    b.HasOne("Kolos2.Models.SeedllingBatch", "Batch")
                        .WithMany("Responsibles")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kolos2.Models.Employee", "Employee")
                        .WithMany("Responsibles")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Batch");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Kolos2.Models.SeedllingBatch", b =>
                {
                    b.HasOne("Kolos2.Models.Nursery", "Nursery")
                        .WithMany("SeedllingBatches")
                        .HasForeignKey("NurseryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kolos2.Models.TreeSpecies", "Species")
                        .WithMany("SeedllingBatches")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nursery");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("Kolos2.Models.Employee", b =>
                {
                    b.Navigation("Responsibles");
                });

            modelBuilder.Entity("Kolos2.Models.Nursery", b =>
                {
                    b.Navigation("SeedllingBatches");
                });

            modelBuilder.Entity("Kolos2.Models.SeedllingBatch", b =>
                {
                    b.Navigation("Responsibles");
                });

            modelBuilder.Entity("Kolos2.Models.TreeSpecies", b =>
                {
                    b.Navigation("SeedllingBatches");
                });
#pragma warning restore 612, 618
        }
    }
}
